{
  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/command-line.schema.json",
  "commands": [
    {
      "commandKind": "global",
      "name": "build-workers",
      "summary": "Build NEO-ONE web workers",
      "description": "Build the NEO-ONE website workers from source",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" node ./packages/neo-one-build-tools-web/lib/compile --bundle workers"
    },
    {
      "commandKind": "global",
      "name": "build-overlay",
      "summary": "Build NEO-ONE web overlay",
      "description": "Build the NEO-ONE website overlay from source",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" node ./packages/neo-one-build-tools-web/lib/compile --bundle overlay"
    },
    {
      "commandKind": "global",
      "name": "build-preview",
      "summary": "Build NEO-ONE web preview",
      "description": "Build the NEO-ONE editor preview from source",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" node ./packages/neo-one-build-tools-web/lib/compile --bundle preview"
    },
    {
      "commandKind": "global",
      "name": "build-test-runner",
      "summary": "Build NEO-ONE test-runner",
      "description": "Build the NEO-ONE test-runner from source",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" node ./packages/neo-one-build-tools-web/lib/compile --bundle testRunner"
    },
    {
      "commandKind": "global",
      "name": "start-preview",
      "summary": "Serve the NEO-ONE web preview",
      "description": "Serve the NEO-ONE web preview",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "serve ./dist/preview -p 8080"
    },
    {
      "commandKind": "global",
      "name": "start-server",
      "summary": "Start NEO-ONE editor server",
      "description": "Build and run the NEO-ONE editor server",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "mkdir -p ./dist/server && touch ./dist/server/index.js && cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" node ./packages/neo-one-build-tools-web/lib/compile --watch --bundle server"
    },
    {
      "commandKind": "global",
      "name": "start-website",
      "summary": "Build NEO-ONE website",
      "description": "Build the NEO-ONE website from source",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "cross-env NODE_OPTIONS=\"--max-old-space-size=6144\" TS_NODE_PROJECT=./packages/neo-one-build-tools/includes/build-configs/tsconfig.es2017.cjs.json react-static start --config ./packages/neo-one-website/static.config.js"
    },
    {
      "commandKind": "global",
      "name": "build-website-prod",
      "summary": "Build NEO-ONE website in prod mode",
      "description": "Build the NEO-ONE website from source in prod mode",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "rm -rf ./packages/neo-one-website/publicOut && cp -r ./dist/workers ./packages/neo-one-website/publicOut && cp -r ./packages/neo-one-website/public/* ./packages/neo-one-website/publicOut && cross-env NEO_ONE_STAGING=true NEO_ONE_CACHE=true NODE_OPTIONS=\"--max-old-space-size=6144\" TS_NODE_PROJECT=./packages/neo-one-build-tools/includes/build-configs/tsconfig.es2017.cjs.json react-static build --staging --config ./packages/neo-one-website/static.config.js"
    },
    {
      "commandKind": "global",
      "name": "start-website-prod",
      "summary": "Start NEO-ONE website in prod mode",
      "description": "Start the NEO-ONE website from source in prod mode",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "serve packages/neo-one-website/dist -p 3000"
    },
    {
      "commandKind": "global",
      "name": "clean",
      "summary": "Clean up NEO-ONE packages",
      "description": "Remove build logs from all packages (and optionally lib/* and .rush/* directories)",
      "safeForSimultaneousRushProcesses": false,
      "shellCommand": "cross-env NODE_OPTIONS=\"--max-old-space-size=6144\" node ./packages/neo-one-build-tools/bin/neo-one-clean.js"
    },
    {
      "commandKind": "global",
      "name": "nit",
      "summary": "find issues with formatting",
      "description": "run prettier with the `--list-different` parameter for CI",
      "safeForSimultaneousRushProcesses": false,
      "shellCommand": "prettier --config .prettierrc --list-different \"packages/*/src/**/*.{ts,tsx}\""
    },
    {
      "commandKind": "global",
      "name": "prettier",
      "summary": "run prettier on the repo",
      "description": "run prettier across packages typescript files",
      "safeForSimultaneousRushProcesses": false,
      "shellCommand": "prettier --config .prettierrc --write \"packages/*/src/**/*.{ts,tsx}\""
    },
    {
      "commandKind": "global",
      "name": "test",
      "summary": "unit test runner",
      "description": "Run all jest unit tests",
      "safeForSimultaneousRushProcesses": false,
      "shellCommand": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" jest --config ./packages/neo-one-build-tests/jest/unit.js"
    },
    {
      "commandKind": "global",
      "name": "test-ci",
      "summary": "unit test runner (CI)",
      "description": "Run all jest unit tests using the CI config",
      "shellCommand": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" jest --config ./packages/neo-one-build-tests/jest/unit-ci.js --ci -w 2"
    },
    {
      "commandKind": "global",
      "name": "e2e",
      "summary": "e2e test runner",
      "description": "Run all jest e2e tests",
      "safeForSimultaneousRushProcesses": false,
      "shellCommand": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" jest --config ./packages/neo-one-build-tests/jest/e2e.js"
    },
    {
      "commandKind": "global",
      "name": "e2e-ci",
      "summary": "e2e test runner (CI)",
      "description": "Run all jest e2e tests using the CI config",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" jest --config ./packages/neo-one-build-tests/jest/e2e-ci.js --ci -w 1"
    },
    {
      "commandKind": "global",
      "name": "e2e-ci:coverage",
      "summary": "e2e test runner (CI)",
      "description": "Run all jest e2e tests using the CI config with nyc coverage",
      "safeForSimultaneousRushProcesses": false,
      "shellCommand": "nyc --reporter json cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" jest --config ./packages/neo-one-build-tests/jest/e2e-ci.js --ci -w 1"
    },
    {
      "commandKind": "global",
      "name": "upload-coverage",
      "summary": "upload coverage (CI)",
      "description": "uploaded codecov coverage reports from unit tests",
      "safeForSimultaneousRushProcesses": false,
      "shellCommand": "codecov -f coverage/coverage-final.json"
    },
    {
      "commandKind": "bulk",
      "name": "tsc",
      "summary": "Run tsc --noEmit in each package",
      "description": "Run tsc --noEmit in each package using that package's tsconfig",
      "incremental": true,
      "safeForSimultaneousRushProcesses": false,
      "ignoreDependencyOrder": true,
      "enableParallelism": true,
      "ignoreMissingScript": true
    },
    {
      "commandKind": "bulk",
      "name": "lint:staged",
      "summary": "Runs prettier/tslint across staged files",
      "description": "Runs `lint:staged` across packages",
      "safeForSimultaneousRushProcesses": true,
      "ignoreDependencyOrder": true,
      "enableParallelism": true,
      "ignoreMissingScript": true
    },
    {
      "commandKind": "bulk",
      "name": "lint",
      "summary": "Runs tslint for every package",
      "description": "Runs tslint for every file in package",
      "safeForSimultaneousRushProcesses": true,
      "ignoreDependencyOrder": true,
      "enableParallelism": true,
      "ignoreMissingScript": true
    },
    {
      "commandKind": "bulk",
      "name": "pack",
      "summary": "pack built files into 'dist'",
      "description": "transform sources and other files for npm exporting",
      "safeForSimultaneousRushProcesses": false,
      "ignoreDependencyOrder": true,
      "enableParallelism": true,
      "ignoreMissingScript": true
    },
    {
      "commandKind": "global",
      "name": "release",
      "summary": "release packed packages with given format",
      "description": "try to publish packages in `dist`",
      "safeForSimultaneousRushProcesses": false,
      "shellCommand": "node packages/neo-one-build-tools/bin/neo-one-publish.js"
    }
  ],
  "parameters": [
    {
      "parameterKind": "flag",
      "longName": "--watch",
      "shortName": "-w",
      "description": "flags this build command as watch",
      "associatedCommands": ["build-workers", "build-overlay", "build-preview", "build-test-runner"]
    },
    {
      "parameterKind": "flag",
      "longName": "--coverage",
      "shortName": "-c",
      "description": "flag to enable coverage collection for jest",
      "associatedCommands": ["test", "test-ci"]
    },
    {
      "parameterKind": "flag",
      "longName": "--update-snapshot",
      "shortName": "-u",
      "description": "update snapshot tests",
      "associatedCommands": ["test", "e2e"]
    },
    {
      "parameterKind": "flag",
      "longName": "--debug",
      "shortName": "-d",
      "description": "enables logging/debug mode for associated command",
      "associatedCommands": ["clean", "start-website"]
    },
    {
      "parameterKind": "flag",
      "longName": "--full",
      "shortName": "-f",
      "description": "enables cleaning of lib/* and rush/* directories",
      "associatedCommands": ["clean"]
    },
    {
      "parameterKind": "string",
      "longName": "--test-path-pattern",
      "shortName": "-t",
      "argumentName": "PATTERN",
      "description": "jest pattern matching parameter",
      "associatedCommands": ["test", "test-ci", "e2e", "e2e-ci", "e2e-ci:coverage"]
    },
    {
      "parameterKind": "choice",
      "longName": "--format",
      "shortName": "-b",
      "description": "specify an output build format (main, esm, browserify)",
      "associatedCommands": ["build", "rebuild", "pack", "release"],
      "alternatives": [
        {
          "name": "main",
          "description": "the main output format (cjs)"
        },
        {
          "name": "next",
          "description": "esnext module format (esm)"
        },
        {
          "name": "browserify",
          "description": "special browserify format"
        }
      ]
    },
    {
      "parameterKind": "choice",
      "longName": "--flags",
      "shortName": "-F",
      "description": "add a code coverage flag",
      "associatedCommands": ["upload-coverage"],
      "alternatives": [
        {
          "name": "unit",
          "description": "flag for unit test coverage"
        },
        {
          "name": "e2e",
          "description": "flag for e2e test coverage"
        }
      ]
    }
  ]
}
