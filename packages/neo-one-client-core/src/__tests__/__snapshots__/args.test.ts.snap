// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`arg assertions assertABI - invalidEvent 1`] = `"Expected ABIEvent for ABI.events, found Foo"`;

exports[`arg assertions assertABI - invalidEvents 1`] = `"Expected Array for ABI.events, found Foo"`;

exports[`arg assertions assertABI - invalidFunction 1`] = `"Expected ABIFunction for ABI.functions, found Foo"`;

exports[`arg assertions assertABI - invalidFunctions 1`] = `"Expected Array for ABI.functions, found Foo"`;

exports[`arg assertions assertABI - invalidParameterType 1`] = `"Expected ABIParameter for ABIFunction.parameters, found Bar"`;

exports[`arg assertions assertABI - invalidReturnType 1`] = `"Expected ABIReturn for ABIFunction.returnType, found Bar"`;

exports[`arg assertions assertABI - invalidType 1`] = `"Expected ABIType for ABIReturn.type, found Bar"`;

exports[`arg assertions assertABI - non object 1`] = `"Expected ABI for value, found true"`;

exports[`arg assertions assertABI - undefined 1`] = `"Expected ABI for value, found undefined"`;

exports[`arg assertions assertAddress - non-address 1`] = `"Expected Address for value, found 0xb50034d97ba8c836758de1124b6c77d38bc772abc9a8f22c85e7389014e75234"`;

exports[`arg assertions assertAddress - non-string 1`] = `"Expected string for value, found 0"`;

exports[`arg assertions assertAddress - undefined 1`] = `"Expected string for value, found undefined"`;

exports[`arg assertions assertArray - non array 1`] = `"Expected Array for value, found true"`;

exports[`arg assertions assertArray - undefined 1`] = `"Expected Array for value, found undefined"`;

exports[`arg assertions assertAttribute - invalid 1`] = `"Expected Address for Attribute.data, found 02028a99826edc0c97d18e22b6932373d908d323aa7f92656a77ec26e8861699ef"`;

exports[`arg assertions assertAttribute - invalid usage 1`] = `"Expected AttributeUsage for Attribute.usage, found Scriptt"`;

exports[`arg assertions assertAttribute - non object 1`] = `"Expected Attribute for value, found true"`;

exports[`arg assertions assertAttribute - undefined 1`] = `"Expected Attribute for value, found undefined"`;

exports[`arg assertions assertBN - BigNumber 1`] = `"Expected string for value, found 10"`;

exports[`arg assertions assertBN - non BN 1`] = `"Expected string for value, found 0"`;

exports[`arg assertions assertBN - undefined 1`] = `"Expected string for value, found undefined"`;

exports[`arg assertions assertBN - undefined 2`] = `"Expected string for value, found undefined"`;

exports[`arg assertions assertBigNumber - non BigNumber 1`] = `"Expected BigNumber for value, found 0"`;

exports[`arg assertions assertBigNumber - undefined 1`] = `"Expected BigNumber for value, found undefined"`;

exports[`arg assertions assertBoolean - non boolean 1`] = `"Expected boolean for value, found 0"`;

exports[`arg assertions assertBoolean - undefined 1`] = `"Expected boolean for value, found undefined"`;

exports[`arg assertions assertBuffer - non-hex 1`] = `"Expected Buffer for value, found 0xb50034d97ba8c836758de1124b6c77d38bc772abc9a8f22c85e7389014e75234"`;

exports[`arg assertions assertBuffer - non-string 1`] = `"Expected string for value, found 0"`;

exports[`arg assertions assertBuffer - undefined 1`] = `"Expected string for value, found undefined"`;

exports[`arg assertions assertHash256 - non-hash 1`] = `"Expected Hash256 for value, found 0xcef0c0fdcfe7838eff6ff104f9cdec2922297537"`;

exports[`arg assertions assertHash256 - non-string 1`] = `"Expected string for value, found 0"`;

exports[`arg assertions assertHash256 - undefined 1`] = `"Expected string for value, found undefined"`;

exports[`arg assertions assertInvokeSendUnsafeReceiveTransactionOptions - invalidAttributes 1`] = `"Expected Array for InvokeSendUnsafeReceiveTransactionOptions.attributes, found [object Object]"`;

exports[`arg assertions assertInvokeSendUnsafeReceiveTransactionOptions - invalidFrom 1`] = `"Expected string for UserAccountID.network, found undefined"`;

exports[`arg assertions assertInvokeSendUnsafeReceiveTransactionOptions - invalidNetworkFee 1`] = `"Expected Array for InvokeSendUnsafeReceiveTransactionOptions.attributes, found [object Object]"`;

exports[`arg assertions assertInvokeSendUnsafeReceiveTransactionOptions - non object 1`] = `"Expected InvokeSendUnsafeReceiveTransactionOptions for value, found true"`;

exports[`arg assertions assertInvokeSendUnsafeReceiveTransactionOptions - onlySendFromsValid 1`] = `"Expected Transfer for InvokeSendUnsafeReceiveTransactionOptions.sendFrom, found Foo"`;

exports[`arg assertions assertNullableArray - non array 1`] = `"Expected Array for value, found true"`;

exports[`arg assertions assertNullableBoolean - non boolean 1`] = `"Expected boolean for value, found 0"`;

exports[`arg assertions assertNullableIterOptions - invalidBlockFilter 1`] = `"Expected IterOptions for value, found [object Object]"`;

exports[`arg assertions assertNullableIterOptions - invalidStart 1`] = `"Expected number for IterOptions.indexStart, found one"`;

exports[`arg assertions assertNullableIterOptions - invalidStop 1`] = `"Expected number for IterOptions.indexStop, found twenty"`;

exports[`arg assertions assertNullableIterOptions - notObject 1`] = `"Expected IterOptions for value, found notObject"`;

exports[`arg assertions assertNullableNumber - non number 1`] = `"Expected number for value, found true"`;

exports[`arg assertions assertNumber - non number 1`] = `"Expected number for value, found true"`;

exports[`arg assertions assertNumber - undefined 1`] = `"Expected number for value, found undefined"`;

exports[`arg assertions assertPublicKey - non public key 1`] = `"Expected PublicKey for value, found b500"`;

exports[`arg assertions assertPublicKey - non-string 1`] = `"Expected string for value, found 0"`;

exports[`arg assertions assertPublicKey - undefined 1`] = `"Expected string for value, found undefined"`;

exports[`arg assertions assertSmartContractDefinition - invalid 1`] = `"Expected SmartContractDefinition for value, found Foo"`;

exports[`arg assertions assertSmartContractDefinition - invalidNetwork 1`] = `"Expected SmartContractNetworkDefinition for SmartContractNetworksDefinition, found Foo"`;

exports[`arg assertions assertSmartContractDefinition - invalidNetworks 1`] = `"Expected SmartContractNetworksDefinition for SmartContractDefinition.networks, found Foo"`;

exports[`arg assertions assertSmartContractDefinition - non object 1`] = `"Expected SmartContractDefinition for value, found true"`;

exports[`arg assertions assertSmartContractDefinition - undefined 1`] = `"Expected SmartContractDefinition for value, found undefined"`;

exports[`arg assertions assertString - non-string 1`] = `"Expected string for value, found 0"`;

exports[`arg assertions assertString - undefined 1`] = `"Expected string for value, found undefined"`;

exports[`arg assertions assertTransactionOptions - invalidAttributes 1`] = `"Expected Array for TransactionOptions.attributes, found [object Object]"`;

exports[`arg assertions assertTransactionOptions - invalidFrom 1`] = `"Expected string for UserAccountID.network, found undefined"`;

exports[`arg assertions assertTransactionOptions - invalidNetworkFee 1`] = `"Expected Array for TransactionOptions.attributes, found [object Object]"`;

exports[`arg assertions assertTransactionOptions - non object 1`] = `"Expected TransactionOptions for value, found true"`;

exports[`arg assertions assertTransfers - invalidTransfer 1`] = `"Expected Transfer for value, found Foo"`;

exports[`arg assertions assertTransfers - non object 1`] = `"Expected Array for value, found true"`;

exports[`arg assertions assertTransfers - undefined 1`] = `"Expected Array for value, found undefined"`;

exports[`arg assertions assertUpdateAccountNameOptions - non object 1`] = `"Expected UpdateAccountNameOptions for value, found true"`;

exports[`arg assertions assertUpdateAccountNameOptions - undefined 1`] = `"Expected UpdateAccountNameOptions for value, found undefined"`;

exports[`arg assertions assertUserAccountID - non object 1`] = `"Expected UserAccountID for value, found true"`;

exports[`arg assertions assertUserAccountID - undefined 1`] = `"Expected UserAccountID for value, found undefined"`;
