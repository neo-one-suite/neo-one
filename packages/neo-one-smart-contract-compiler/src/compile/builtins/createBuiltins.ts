import { Context } from '../../Context';
import { add as addArray } from './array';
import { add as addAssertEqual } from './assertEqual';
import { add as addBoolean } from './boolean';
import { add as addBuffer } from './buffer';
import { Builtins } from './Builtins';
import { add as addConsole } from './console';
import { add as addContract } from './contract';
import { add as addError } from './error';
import { add as addFunction } from './function';
import { add as addIterable } from './iterable';
import { add as addIterableIterator } from './iterableIterator';
import { add as addIterator } from './iterator';
import { add as addIteratorResult } from './iteratorResult';
import { add as addMap } from './map';
import { add as addNumber } from './number';
import { add as addObject } from './object';
import { add as addOne } from './one';
import { add as addPropertyDescriptor } from './propertyDescriptor';
import { add as addRegExp } from './regexp';
import { add as addSet } from './set';
import { add as addString } from './string';
import { add as addSymbol } from './symbol';
import { add as addTemplateStringsArray } from './templateStringsArray';
import { add as addTypedPropertyDescriptor } from './typedPropertyDescriptor';

export const createBuiltins = (context: Context): Builtins => {
  const builtins = new Builtins(context);
  addArray(builtins);
  addAssertEqual(builtins);
  addBoolean(builtins);
  addBuffer(builtins);
  addConsole(builtins);
  addContract(builtins);
  addError(builtins);
  addFunction(builtins);
  addIterable(builtins);
  addIterableIterator(builtins);
  addIterator(builtins);
  addIteratorResult(builtins);
  addMap(builtins);
  addNumber(builtins);
  addObject(builtins);
  addOne(builtins);
  addPropertyDescriptor(builtins);
  addRegExp(builtins);
  addSet(builtins);
  addString(builtins);
  addSymbol(builtins);
  addTemplateStringsArray(builtins);
  addTypedPropertyDescriptor(builtins);

  return builtins;
};
